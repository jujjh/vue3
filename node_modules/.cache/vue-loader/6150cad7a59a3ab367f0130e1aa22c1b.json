{"remainingRequest":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\inputField.vue?vue&type=template&id=20ec6540&scoped=true","dependencies":[{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\inputField.vue","mtime":1639010242460},{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1639096350800},{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639010176117},{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639096350789}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdg0KICAgICAgICA6Y2xhc3M9IlsnaW5wdXRfd3JhcCcsIHtlcnJvcjogIWlzVmFsaWRhdGV9LCB7c3VjY2Vzczogc3VjY2Vzc2Z1bH0sIHtibG9jazogYmxvY2t9XSINCiAgICAgICAgOnN0eWxlPSJ7d2lkdGg6IHN0eWxlV2lkdGh9IiBAZm9jdXM9ImZvY3VzIj4NCg0KICAgICAgICA8dGV4dGFyZWENCiAgICAgICAgICAgIHJlZj0idGV4dGFyZWEiDQogICAgICAgICAgICA6Y2xhc3M9IlsnYmxvY2snLCAnZm9ybS1jb250cm9sJywgeydmb3JtLWNvbnRyb2wtc20nOiBzbX0sIHtibG9jazogYmxvY2t9XSINCiAgICAgICAgICAgIDpzdHlsZT0iW3toZWlnaHQ6IGhlaWdodCA/IGhlaWdodCArICdweCcgOiBmYWxzZX1dIg0KICAgICAgICAgICAgOnJvd3M9InJvd3MiDQogICAgICAgICAgICA6cGxhY2Vob2xkZXI9InBsYWNlaG9sZGVyIg0KICAgICAgICAgICAgOnZhbHVlPSJtb2RlbFZhbHVlIg0KICAgICAgICAgICAgOnJlYWRvbmx5PSJyZWFkb25seSINCiAgICAgICAgICAgIDp0YWJpbmRleD0idGFiSW5kZXggPyB0YWJJbmRleCA6IGZhbHNlIg0KICAgICAgICAgICAgOmRpc2FibGVkPSJkaXNhYmxlZCINCiAgICAgICAgICAgIEBpbnB1dD0idXBkYXRlVmFsdWUiDQogICAgICAgICAgICBAc3VibWl0PSJjaGVjaygpIg0KICAgICAgICAgICAgdi1pZj0ibXVsdGlsaW5lIj4NCiAgICAgICAgPC90ZXh0YXJlYT4NCiAgICAgICAgPGlucHV0DQogICAgICAgICAgICByZWY9ImlucHV0Ig0KICAgICAgICAgICAgOmNsYXNzPSJbJ3RleHQgYmxvY2sgZm9ybS1jb250cm9sJywgeydmb3JtLWNvbnRyb2wtc20nOiBzbX0sIHtibG9jazogYmxvY2t9LCB7J3RleHQtcmlnaHQnOiB0ZXh0UmlnaHR9XSINCiAgICAgICAgICAgIDpzdHlsZT0iW3t3aWR0aDogd2lkdGggPyB3aWR0aCArICdweCcgOiBmYWxzZX1dIg0KICAgICAgICAgICAgOnR5cGU9InR5cGUiDQogICAgICAgICAgICA6cGxhY2Vob2xkZXI9InBsYWNlaG9sZGVyIg0KICAgICAgICAgICAgOnZhbHVlPSJtb2RlbFZhbHVlIg0KICAgICAgICAgICAgOnRhYmluZGV4PSJ0YWJJbmRleCA/IHRhYkluZGV4IDogZmFsc2UiDQogICAgICAgICAgICA6ZGlzYWJsZWQ9ImRpc2FibGVkIg0KICAgICAgICAgICAgOnJlYWRvbmx5PSJyZWFkb25seSINCiAgICAgICAgICAgIDptYXhsZW5ndGg9Im1heExlbmd0aCA/IG1heExlbmd0aCA6IGZhbHNlIg0KICAgICAgICAgICAgQGlucHV0PSJ1cGRhdGVWYWx1ZSINCiAgICAgICAgICAgIEBzdWJtaXQ9ImNoZWNrKCkiDQogICAgICAgICAgICB2LWVsc2U+DQoNCiAgICAgICAgPHAgOmNsYXNzPSJbJ2Rlc2NyaXB0aW9uJywge2Vycm9yOiBlcnJvclRyYW5zaXRpb259XSIgdi1pZj0ibWVzc2FnZSAhPT0gJycgfHwgc3VjY2Vzc2Z1bCI+DQogICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZSIgdi1pZj0iIWlzVmFsaWRhdGUiPjwvaT4NCiAgICAgICAgICAgIHt7bWVzc2FnZX19DQogICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWNoZWNrLWNpcmNsZSIgdi1pZj0ic3VjY2Vzc2Z1bCI+PC9pPg0KICAgICAgICA8L3A+DQogICAgPC9kaXY+DQo="},{"version":3,"sources":["D:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\inputField.vue"],"names":[],"mappings":"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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEV,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrxD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/00_김주희/00_개인스터디/vue3/src/components/inputField.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div\r\n        :class=\"['input_wrap', {error: !isValidate}, {success: successful}, {block: block}]\"\r\n        :style=\"{width: styleWidth}\" @focus=\"focus\">\r\n\r\n        <textarea\r\n            ref=\"textarea\"\r\n            :class=\"['block', 'form-control', {'form-control-sm': sm}, {block: block}]\"\r\n            :style=\"[{height: height ? height + 'px' : false}]\"\r\n            :rows=\"rows\"\r\n            :placeholder=\"placeholder\"\r\n            :value=\"modelValue\"\r\n            :readonly=\"readonly\"\r\n            :tabindex=\"tabIndex ? tabIndex : false\"\r\n            :disabled=\"disabled\"\r\n            @input=\"updateValue\"\r\n            @submit=\"check()\"\r\n            v-if=\"multiline\">\r\n        </textarea>\r\n        <input\r\n            ref=\"input\"\r\n            :class=\"['text block form-control', {'form-control-sm': sm}, {block: block}, {'text-right': textRight}]\"\r\n            :style=\"[{width: width ? width + 'px' : false}]\"\r\n            :type=\"type\"\r\n            :placeholder=\"placeholder\"\r\n            :value=\"modelValue\"\r\n            :tabindex=\"tabIndex ? tabIndex : false\"\r\n            :disabled=\"disabled\"\r\n            :readonly=\"readonly\"\r\n            :maxlength=\"maxLength ? maxLength : false\"\r\n            @input=\"updateValue\"\r\n            @submit=\"check()\"\r\n            v-else>\r\n\r\n        <p :class=\"['description', {error: errorTransition}]\" v-if=\"message !== '' || successful\">\r\n            <i class=\"fas fa-exclamation-circle\" v-if=\"!isValidate\"></i>\r\n            {{message}}\r\n            <i class=\"fas fa-check-circle\" v-if=\"successful\"></i>\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, watch, computed, onMounted, defineProps, defineEmits, defineExpose } from 'vue'\r\n\r\nconst props = defineProps({\r\n    modelValue: [String, Number],   // model\r\n    type: {                         // 입력 폼 형식 String:''\r\n        type: String,\r\n        default: 'text'\r\n    },\r\n    placeholder: String,            // String:''\r\n    rows: {                         // multiline 이 true인 경우 몇 줄 까지 보일지 설정 Number: 5\r\n        type: [Number, String],\r\n        default: 5\r\n    },\r\n    height: [String, Number],       // textarea 높이\r\n    width: [String, Number],        // 넓이\r\n    block: {                        // display block !!! width가 선언 된 경우 width가 우선\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    validate: {                     // 폼 검증 배열일 경우 함수에 의거, true일 경우 pattern 호출(password, email만) Array:[condition:function || message:text] or true\r\n        type: Array,\r\n        default: () => []\r\n    },\r\n    blurValidate: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    success: {                      // 폼 검증이 완료된 경우 check icon 표시 여부 Boolean: false\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    pattern: {                      // 체크할 패턴을 지정 String:''\r\n        type: String,\r\n        default: ''\r\n    },\r\n    maxLength: [String, Number],    // maxlength String:''\r\n    errorMessage: {                 // 강제 에러 출력 - check함수를 수행 하지 않음 String:''\r\n        type: String,\r\n        default: ''\r\n    },\r\n    multiline: {                    // textarea 여부,\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    disabled: Boolean,              // disabled : false\r\n    autofocus: {\r\n        type: Boolean,\r\n        default: false\r\n    },             // 자동 포커스\r\n    textRight: String,              // text 정렬 오른 쪽으로\r\n    tabIndex: [String, Number],     // tabindex\r\n    maxLength: [String, Number],    // 최대 입력 가능한 글자 수 (type=text 에만 적용)\r\n    readonly: Boolean,              // readonly Boolean: false\r\n    sm: {\r\n        type: Boolean,\r\n        default: false,\r\n    }\r\n})\r\nconst emit = defineEmits()\r\n\r\nlet isValidate = ref(true)\r\nlet checkPass = ref(false)\r\nlet message = ref('')\r\nlet errorTransition = ref(false)\r\n\r\nconst textarea = ref(null)\r\nconst input = ref(null)\r\n\r\nwatch(() => props.errorMessage, (v) => {\r\n    // 임의로 지정된 에러가 있는 경우 에러 아이콘 표기\r\n    if (v != '') {\r\n        message.value = v\r\n        isValidate.value = false\r\n        checkPass.value = false\r\n        errorTransition.value = true\r\n    } else {\r\n        message.value = ''\r\n        isValidate.value = true\r\n        checkPass.value = true\r\n        errorTransition.value = false\r\n    }\r\n})\r\n\r\nwatch(() => props.errorTransition, (v) => {\r\n    if (v) {\r\n        setTimeout(() => {\r\n            errorTransition.value = false\r\n        }, 300)\r\n    }\r\n})\r\n\r\nwatch(() => props.modelValue, (v) => {\r\n    // 외부에서 model이 업데이트 되도 유효성 검사\r\n    if (v != '') {\r\n        message.value = ''\r\n        isValidate.value = true\r\n        errorTransition.value = false\r\n    }\r\n})\r\n\r\nwatch(() => props.validate, () => {\r\n    message.value = ''\r\n    isValidate.value = true\r\n    errorTransition.value = false\r\n})\r\n\r\nconst successful = computed(() => props.success === true && isValidate && checkPass)\r\nconst styleWidth = computed(() => {\r\n    if (props.width) {\r\n        return (props.width.toString().indexOf('%') >= 0) ? props.width : props.width + 'px'\r\n    } else {\r\n        return false\r\n    }\r\n})\r\n\r\nconst updateValue = (evt = null) => {\r\n    let v = ''\r\n\r\n    if (evt === null) {\r\n        v = props.modelValue\r\n    } else {\r\n        v = evt.target.value\r\n    }\r\n\r\n    emit('update:modelValue', v)\r\n}\r\n\r\nconst getPattern = (type = '') => {\r\n    if (pattern !== undefined) {\r\n        type = props.pattern.value\r\n    }\r\n\r\n    let obj =  {\r\n        pattern: '',\r\n        message: ''\r\n    }\r\n\r\n    switch (type) {\r\n        // 영문만 유효성 검사\r\n        case 'eng':\r\n            obj.pattern = /^[a-z|A-Z]+$/\r\n            obj.message = '영문만 입력 가능합니다.'\r\n        break\r\n        // 영문,숫자 유효성 검사\r\n        case 'engnum':\r\n            obj.pattern = /^[(a-z|A-Z)0-9]+$/\r\n            obj.message = '영문, 숫자만 입력 가능합니다.'\r\n        break\r\n        // 아이디 영문,숫자,underbar(_) 사용 유효성 검사\r\n        case 'id':\r\n            obj.pattern = /^[(a-z|A-Z)0-9]+[_]*[(a-z|A-Z)0-9]+$/\r\n            obj.message = '영문, 숫자 입력만 가능합니다.( _ 중간 사용 가능)'\r\n        break\r\n        // 정수 유효성 검사\r\n        case 'num':\r\n            obj.pattern = /^[0-9]+$/\r\n            obj.message = '숫자만 입력 가능합니다.'\r\n        break\r\n        // 영문,숫자 혼합사용 유효성 검사\r\n        case 'wordnum':\r\n            obj.pattern = /^([0-9]+[a-z|A-Z]+)|([a-z|A-Z]+[0-9]+)$/\r\n            obj.message = '영문, 숫자 혼합하여 입력해주세요.'\r\n        break\r\n        case 'password':\r\n            obj.pattern = /^(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9])|(?=.*[a-zA-Z])(?=.*[0-9])|(?=.*[^a-zA-Z0-9])(?=.*[0-9]).{8,16}$/\r\n            obj.message = '영문, 숫자, 특수문자 중 2가지 이상을 조합하여 입력해주세요.(8~16자)'\r\n        break\r\n        // 도메인\r\n        case 'domain':\r\n            obj.pattern = /^([a-zA-Z0-9]{1,}\\.?)[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z0-9]{2,})+(?:\\:[0-9]{1,})*$/\r\n            obj.message = '도메인주소 형식이 일치 하지 않습니다.(http://, https:// 제외)'\r\n        break\r\n        // 이메일 유효성 검사\r\n        case 'email':\r\n            obj.pattern = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/\r\n            obj.message = '이메일 형식과 일치하지 않습니다.'\r\n        break\r\n        // 전화 번호 유효성\r\n        case 'tel':\r\n            obj.pattern = /^(01[016789]{1}|02|0[3-9]{1}[0-9]{1})-?[0-9]{3,4}-?[0-9]{4}$/\r\n            obj.message = '전화번호 형식과 일치하지 않습니다.'\r\n        break\r\n    }\r\n\r\n    return obj\r\n}\r\n\r\nconst check = () => {\r\n    // 임의로 지정된 에러가 없는 경우\r\n    if (props.errorMessage === '') {\r\n        // pattern check\r\n        if (props.pattern != '') {\r\n            const pt = getPattern()\r\n\r\n            if (pt.pattern.test(props.modelValue)) {\r\n                message.value = ''\r\n            } else {\r\n                message.value = pt.message\r\n                isValidate.value = false\r\n                checkPass.value = false\r\n                errorTransition.value = true\r\n\r\n                return false\r\n            }\r\n        }\r\n\r\n        // validate check\r\n        if (props.validate.length > 0) {\r\n            for (let i = 0; i < props.validate.length; i++) {\r\n                let result = props.validate[i].call(null, props.modelValue)\r\n\r\n                if (result !== true) {\r\n                    message.value = result\r\n                    isValidate.value = false\r\n                    checkPass.value = false\r\n                    errorTransition.value = true\r\n\r\n                    return false\r\n                } else {\r\n                    message.value = ''\r\n                }\r\n            }\r\n        }\r\n\r\n        isValidate.value = true\r\n        checkPass.value = true\r\n\r\n        return true\r\n    } else {\r\n        errorTransition.value = true\r\n    }\r\n}\r\n\r\nconst resetForm = () => {\r\n    message.value = ''\r\n    isValidate.value = true\r\n    checkPass.value = true\r\n    errorTransition.value = false\r\n\r\n    emit('update:modelValue', '')\r\n}\r\n\r\nonMounted(() => {\r\n    if (props.autofocus && props.multiline) {\r\n        textarea.value.focus()\r\n    } else if (props.autofocus && !props.multiline) {\r\n        input.value.focus()\r\n    }\r\n})\r\n\r\nif (props.modelValue != '') {\r\n    updateValue()\r\n}\r\n\r\ndefineExpose({\r\n    check,\r\n    resetForm\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.input_wrap {display: inline-block; vertical-align: top;}\r\n.input_wrap.block {display: block !important;}\r\ntextarea {resize: none;}\r\n.description {text-align: left; margin-bottom: 0; font-size: 12px; color: rgb(104, 104, 104);}\r\n.description.error {color: #f16868}\r\n</style>"]}]}
{"remainingRequest":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!F:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\numberFormat.vue?vue&type=style&index=0&id=3af736a0&scoped=true&lang=css","dependencies":[{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\numberFormat.vue","mtime":1639010242462},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639010181170},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1639010234911},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\postcss-loader\\src\\index.js","mtime":1639010216011},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639010176117},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639010234900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbnB1dCB7ZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7IHdpZHRoOiAyMDBweDsgbWFyZ2luLXJpZ2h0OiA1cHg7IHRleHQtYWxpZ246IHJpZ2h0O30NCg=="},{"version":3,"sources":["F:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\numberFormat.vue"],"names":[],"mappings":";AAmEA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"F:/00_김주희/00_개인스터디/vue3/src/components/numberFormat.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <input type=\"text\" class=\"form-control\" :value=\"numFormat\" @input=\"updateValue\" @blur=\"valueCheck\" @focus=\"valueCheck\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits, getCurrentInstance } from 'vue'\r\n\r\nconst app = getCurrentInstance()\r\nconst props = defineProps({\r\n    num: {\r\n        type: Number,\r\n        required: true,\r\n    },\r\n    numFormat: {\r\n        type: String,\r\n        default: '0'\r\n    },\r\n    name: String,\r\n})\r\n\r\nfunction updateValue(evt) {\r\n    app.emit('update:numFormat', format(evt.target.value))\r\n\r\n    let num = parseInt(evt.target.value.replace(/,/ig, ''))\r\n\r\n    if (isNaN(num)) {\r\n        num = 0\r\n    }\r\n\r\n    app.emit('update:num', num)\r\n}\r\n\r\nconst valueCheck = (evt) => {\r\n    if (evt.type == 'focus') {\r\n        if (props.numFormat == '0') {\r\n            app.emit('update:numFormat', '')\r\n        }\r\n    } else if (evt.type == 'blur') {\r\n        if (props.numFormat == '') {\r\n            app.emit('update:numFormat', '0')\r\n        }\r\n    }\r\n}\r\n\r\nconst format = (v) => {\r\n    if (v !== '') {\r\n        let minus = parseInt(v) >= 0 ? false : true\r\n        let find = /(\\d+)(\\d{3})/\r\n        let spNum = v.toString().split('.')\r\n        let num = parseInt(spNum[0].replace(/[^0-9]/g, '')).toString()\r\n\r\n        while (find.test(num)) {\r\n            num = num.replace(find, '$1' + ',' + '$2')\r\n        }\r\n\r\n        if (minus) {\r\n            num = '-' + num\r\n        }\r\n\r\n        return num\r\n    }\r\n\r\n    return ''\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput {display: inline-block !important; width: 200px; margin-right: 5px; text-align: right;}\r\n</style>"]}]}
{"remainingRequest":"C:\\Users\\jhee_\\Desktop\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\jhee_\\Desktop\\vue3\\src\\views\\part4\\game.vue?vue&type=template&id=01a5143a&scoped=true","dependencies":[{"path":"C:\\Users\\jhee_\\Desktop\\vue3\\src\\views\\part4\\game.vue","mtime":1638252346000},{"path":"C:\\Users\\jhee_\\Desktop\\vue3\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\jhee_\\Desktop\\vue3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jhee_\\Desktop\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGlkPSJnYW1lIj4KICAgICAgICA8ZGl2IGNsYXNzPSJib2FyZCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndyYXAtY2VudGVyIj4KICAgICAgICAgICAgICAgIDx0cmFuc2l0aW9uLWdyb3VwIG5hbWU9ImNhcmRzIiBjbGFzcz0id3JhcCIgdGFnPSJ1bCI+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJjYXJkIiB2LWZvcj0iKGl0ZW0sIGkpIGluIGNhcmRzIiA6a2V5PSInY2FyZCcgKyBpdGVtLmtleSIgQGNsaWNrPSJvcGVuQ2FyZChpKSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgOmNsYXNzPSJbJ2l0ZW0gZnJvbnQnLCB7b3BlbjogaXRlbS5pc09wZW5lZH1dIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtcXVlc3Rpb24iIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IDpjbGFzcz0iWydpdGVtIGJhY2snLCB7b3BlbjogaXRlbS5pc09wZW5lZH0sIHtwYWlyOiBpdGVtLmlzUGFpcn1dIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZShgQC9hc3NldHMvaW1ncy8ke2l0ZW0uaW1nfS1sb2dvLnBuZ2ApIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC90cmFuc2l0aW9uLWdyb3VwPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNjb3JlIj4KICAgICAgICAgICAgICAgIOuPhOyghCDtmp/siJg6IHt7c2NvcmV9fQogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBsZXRlIiB2LWlmPSJzY29yZUJvYXJkIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBsZXRlLWJvYXJkIj4KICAgICAgICAgICAgICAgICAgICA8cD7stJ0g64+E7KCEIO2an+yImDoge3tzY29yZX19PC9wPgogICAgICAgICAgICAgICAgICAgIDxwPu2UjOugiOydtCDsi5zqsIQ6IHt7Y29tcGxldGVUaW1lfX08L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im15LTAiPgogICAgICAgICAgICAgICAgICAgICAgICA8c2xvdC1idG4gdHlwZT0ic2Vjb25kYXJ5IiBAY2xpY2s9ImNsb3NlIj7ri6vquLA8L3Nsb3QtYnRuPiZuYnNwOwogICAgICAgICAgICAgICAgICAgICAgICA8c2xvdC1idG4gdHlwZT0ic3VjY2VzcyIgQGNsaWNrPSJyZXN0YXJ0Ij7ri6Tsi5wg7Iuc7J6R7ZWY6riwPC9zbG90LWJ0bj4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxwPgogICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj0iaXNBdXRvIj4KICAgICAgICAgICAgICAgIDxzbG90LWJ0biB0eXBlPSJ3YXJuaW5nIiBAY2xpY2s9ImF1dG9TdG9wIj7snpDrj5kg7KeE7ZaJIOykkeuLqDwvc2xvdC1idG4+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+CiAgICAgICAgICAgICAgICA8c2xvdC1idG4gdHlwZT0icHJpbWFyeSIgQGNsaWNrPSJzdGFydCIgdi1pZj0iIWlzU3RhcnQiPuyLnOyeke2VmOq4sDwvc2xvdC1idG4+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPgogICAgICAgICAgICAgICAgICAgIDxzbG90LWJ0biB0eXBlPSJkYW5nZXIiIEBjbGljaz0iY2FuY2VsIj7st6jshoztlZjquLA8L3Nsb3QtYnRuPiZuYnNwOwogICAgICAgICAgICAgICAgICAgIDxzbG90LWJ0biB0eXBlPSJpbmZvIiBAY2xpY2s9ImF1dG9QbGF5Ij7snpDrj5kg7KeE7ZaJPC9zbG90LWJ0bj4KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC9wPgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["C:\\Users\\jhee_\\Desktop\\vue3\\src\\views\\part4\\game.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC/C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBAChC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACnE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBAC/D,CAAC,CAAC,CAAC,CAAC,CAAC;oBACT,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC;YACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/jhee_/Desktop/vue3/src/views/part4/game.vue","sourceRoot":"","sourcesContent":["<template>\n    <div id=\"game\">\n        <div class=\"board\">\n            <div class=\"wrap-center\">\n                <transition-group name=\"cards\" class=\"wrap\" tag=\"ul\">\n                    <li class=\"card\" v-for=\"(item, i) in cards\" :key=\"'card' + item.key\" @click=\"openCard(i)\">\n                        <div :class=\"['item front', {open: item.isOpened}]\">\n                            <i class=\"fas fa-question\" />\n                        </div>\n                        <div :class=\"['item back', {open: item.isOpened}, {pair: item.isPair}]\">\n                            <img :src=\"require(`@/assets/imgs/${item.img}-logo.png`)\" />\n                        </div>\n                    </li>\n                </transition-group>\n            </div>\n\n            <div class=\"score\">\n                도전 횟수: {{score}}\n            </div>\n\n            <div class=\"complete\" v-if=\"scoreBoard\">\n                <div class=\"complete-board\">\n                    <p>총 도전 횟수: {{score}}</p>\n                    <p>플레이 시간: {{completeTime}}</p>\n                    <p class=\"my-0\">\n                        <slot-btn type=\"secondary\" @click=\"close\">닫기</slot-btn>&nbsp;\n                        <slot-btn type=\"success\" @click=\"restart\">다시 시작하기</slot-btn>\n                    </p>\n                </div>\n            </div>\n        </div>\n\n        <p>\n            <template v-if=\"isAuto\">\n                <slot-btn type=\"warning\" @click=\"autoStop\">자동 진행 중단</slot-btn>\n            </template>\n            <template v-else>\n                <slot-btn type=\"primary\" @click=\"start\" v-if=\"!isStart\">시작하기</slot-btn>\n                <template v-else>\n                    <slot-btn type=\"danger\" @click=\"cancel\">취소하기</slot-btn>&nbsp;\n                    <slot-btn type=\"info\" @click=\"autoPlay\">자동 진행</slot-btn>\n                </template>\n            </template>\n        </p>\n    </div>\n</template>\n\n<script setup>\nimport { ref, inject } from 'vue'\nimport slotBtn from '@/components/slotBtn'\n\nconst _ = require('lodash')\nconst util = inject('util')\n\nconst logos = ['vue', 'react', 'angular', 'nodejs', 'webpack', 'js']\n\nlet isStart = ref(false)\nlet isComplete = ref(false)\nlet cards = ref([])\nlet openedCount = ref(0)\nlet openedIndex = ref([])\nlet score = ref(0)\nlet scoreBoard = ref(false)\nlet completeTime = ref('')\n\nlet isAuto = ref(false)\nlet pairCount = 0, startTime = 0, endTime = 0\nlet openComplete = []\n\nconst setCards = () => {\n    cards.value = []\n\n    for (let i = 0; i < 12; i++) {\n        cards.value.push({img: logos[i % 6], isOpened: true, isPair: false, key: i})\n    }\n}\n\nconst start = async () => {\n    close()\n\n    for (let i = 0; i < cards.value.length; i++) {\n        cards.value[i].isOpened = false\n        cards.value[i].isPair = false\n\n        await util.delay(100)\n    }\n\n    await util.delay(600)\n\n    await shuffle()\n\n    startTime = new Date().getTime()\n    isStart.value = true\n}\n\nconst cancel = async () => {\n    close()\n\n    for (let i = 0; i < cards.value.length; i++) {\n        cards.value[i].isOpened = true\n        cards.value[i].isPair = false\n\n        await util.delay(100)\n    }\n}\n\nconst restart = () => {\n    close()\n    start()\n}\n\nconst close = () => {\n    pairCount = 0\n    openComplete = []\n    score.value = 0\n    openedCount.value = 0\n    openedIndex.value = []\n    scoreBoard.value = false\n    isStart.value = false\n    isComplete.value = false\n}\n\nconst openCard = async (index) => {\n    if (openedCount.value < 2 && !cards.value[index].isOpened && isStart.value) {\n        openedCount.value++\n        cards.value[index].isOpened = true\n        openedIndex.value.push(index)\n\n        await checkPair()\n    }\n}\n\nconst checkPair = async () => {\n    if (openedCount.value >= 2) {\n        score.value++\n\n        let index1 = openedIndex.value[0], index2 = openedIndex.value[1]\n\n        if (cards.value[index1].img == cards.value[index2].img) {\n            await util.delay(500)\n\n            cards.value[index1].isPair = true\n            cards.value[index2].isPair = true\n\n            pairCount++\n\n            openComplete.push(index1)\n            openComplete.push(index2)\n        } else {\n            await util.delay(1000)\n\n            cards.value[index1].isOpened = false\n            await util.delay(100)\n            cards.value[index2].isOpened = false\n        }\n\n        openedIndex.value = []\n        openedCount.value = 0\n    }\n\n    if (pairCount >= 6) {\n        endTime = new Date().getTime()\n        let completeDate = new Date(endTime - startTime)\n\n        completeTime.value = `${completeDate.getMinutes()}:${completeDate.getSeconds()}`\n        scoreBoard.value = true\n        isAuto.value = false\n    }\n}\n\nconst shuffle = async () => {\n    for (let i = 0; i < 24; i++) {\n        let index = i % 12\n        let num = cards.value[index]\n        let changeIndex = -1\n\n        do {\n            changeIndex = _.random(0, cards.value.length - 1)\n        } while (changeIndex == index)\n\n        let changeNum = cards.value[changeIndex]\n\n        cards.value[index] = changeNum\n        cards.value[changeIndex] = num\n\n        await util.delay(250)\n    }\n}\n\nconst autoPlay = async () => {\n    isAuto.value = true\n    let openIndex = []\n\n    while (pairCount < 6 && isAuto.value) {\n        let index = _.random(0, cards.value.length - 1)\n\n        if (openIndex.indexOf(index) == -1 && openComplete.indexOf(index) == -1) {\n            if (openIndex.length >= 2) {\n                openIndex = []\n            }\n\n            openIndex.push(index)\n            await openCard(index)\n        }\n    }\n}\n\nconst autoStop = () => {\n    isAuto.value = false\n}\n\nsetCards()\n</script>\n\n<style scoped>\n#game {text-align: center;}\n#game .board {\n    display: inline-block; width: 80vw; background-color: #000; padding: 25px 25px 0 25px; margin-bottom: 10px;\n    background-image: url('../../assets/imgs/bg.jpg'); background-repeat: no-repeat; background-size: cover;\n    background-position: center; text-align: center; position: relative;\n}\n#game .board .score {position: absolute; left: 20px; top: 10px; color: #fff; font-size: 30px; font-weight: 700}\n#game .complete {\n    position: absolute; width: 100%; height: 100%; left: 0; top: 0; background-color: rgba(0, 0, 0, .5);\n    display: flex; flex-direction: row; align-items: center; justify-content: center;\n}\n#game .complete-board {width: 300px; background-color: #fff; border-radius: 20px; padding: 20px; font-size: 20px;}\n#game .board .wrap-center {display: inline-block}\n.wrap {\n    width: 820px; height: 820px;\n    display: flex; flex-wrap: wrap; flex-direction: row;\n    justify-content: space-between;\n    padding: 0; margin: 0; list-style: none;\n}\n.card {\n    position: relative; width: 180px; height: 240px; perspective: 600px;\n    border-radius: 10px; border: 0; background-color: transparent;\n}\n.card .item {border-radius: 10px; transition: all .5s; backface-visibility: hidden;}\n.card .front {\n    position: absolute; width: 100%; height: 100%; left: 0; top: 0; background-color: gold;\n    color: #fff; font-size: 80px; display: flex; flex-direction: row; align-items: center; justify-content: center;\n    box-sizing: border-box; transform: rotateY(0deg); box-shadow: 1px 2px 4px #000;\n}\n.card .front.open {transform: rotateY(180deg)}\n.card .back {\n    width: 100%; height: 100%; background-color: #fff; transform: rotateY(-180deg); overflow: hidden;\n    display: flex; flex-direction: row; align-items: center; justify-content: center; box-sizing: border-box; box-shadow: 1px 2px 4px #000;\n}\n.card .back img {width: 70%; height: auto;}\n.card .back.open {transform: rotateY(0deg)}\n.card .back.pair {background-color: gold}\n.cards-move {transition: transform .2s ease}\n</style>"]}]}
{"remainingRequest":"D:\\vue3\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\vue3\\src\\views\\part4\\game.vue?vue&type=template&id=01a5143a&scoped=true","dependencies":[{"path":"D:\\vue3\\src\\views\\part4\\game.vue","mtime":1638881583976},{"path":"D:\\vue3\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"D:\\vue3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue3\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBpZD0iZ2FtZSI+DQogICAgICAgIDxkaXYgY2xhc3M9ImJvYXJkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndyYXAtY2VudGVyIj4NCiAgICAgICAgICAgICAgICA8dHJhbnNpdGlvbi1ncm91cCBuYW1lPSJjYXJkcyIgY2xhc3M9IndyYXAiIHRhZz0idWwiPg0KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImNhcmQiIHYtZm9yPSIoaXRlbSwgaSkgaW4gY2FyZHMiIDprZXk9IidjYXJkJyArIGl0ZW0ua2V5IiBAY2xpY2s9Im9wZW5DYXJkKGkpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgOmNsYXNzPSJbJ2l0ZW0gZnJvbnQnLCB7b3BlbjogaXRlbS5pc09wZW5lZH1dIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXF1ZXN0aW9uIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IDpjbGFzcz0iWydpdGVtIGJhY2snLCB7b3BlbjogaXRlbS5pc09wZW5lZH0sIHtwYWlyOiBpdGVtLmlzUGFpcn1dIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoYEAvYXNzZXRzL2ltZ3MvJHtpdGVtLmltZ30tbG9nby5wbmdgKSIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgIDwvdHJhbnNpdGlvbi1ncm91cD4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzY29yZSI+DQogICAgICAgICAgICAgICAg64+E7KCEIO2an+yImDoge3tzY29yZX19DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tcGxldGUiIHYtaWY9InNjb3JlQm9hcmQiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBsZXRlLWJvYXJkIj4NCiAgICAgICAgICAgICAgICAgICAgPHA+7LSdIOuPhOyghCDtmp/siJg6IHt7c2NvcmV9fTwvcD4NCiAgICAgICAgICAgICAgICAgICAgPHA+7ZSM66CI7J20IOyLnOqwhDoge3tjb21wbGV0ZVRpbWV9fTwvcD4NCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im15LTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNsb3QtYnRuIHR5cGU9InNlY29uZGFyeSIgQGNsaWNrPSJjbG9zZSI+64ur6riwPC9zbG90LWJ0bj4mbmJzcDsNCiAgICAgICAgICAgICAgICAgICAgICAgIDxzbG90LWJ0biB0eXBlPSJzdWNjZXNzIiBAY2xpY2s9InJlc3RhcnQiPuuLpOyLnCDsi5zsnpHtlZjquLA8L3Nsb3QtYnRuPg0KICAgICAgICAgICAgICAgICAgICA8L3A+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgPHA+DQogICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj0iaXNBdXRvIj4NCiAgICAgICAgICAgICAgICA8c2xvdC1idG4gdHlwZT0id2FybmluZyIgQGNsaWNrPSJhdXRvU3RvcCI+7J6Q64+ZIOynhO2WiSDspJHri6g8L3Nsb3QtYnRuPg0KICAgICAgICAgICAgPC90ZW1wbGF0ZT4NCiAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+DQogICAgICAgICAgICAgICAgPHNsb3QtYnRuIHR5cGU9InByaW1hcnkiIEBjbGljaz0ic3RhcnQiIHYtaWY9IiFpc1N0YXJ0Ij7si5zsnpHtlZjquLA8L3Nsb3QtYnRuPg0KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+DQogICAgICAgICAgICAgICAgICAgIDxzbG90LWJ0biB0eXBlPSJkYW5nZXIiIEBjbGljaz0iY2FuY2VsIj7st6jshoztlZjquLA8L3Nsb3QtYnRuPiZuYnNwOw0KICAgICAgICAgICAgICAgICAgICA8c2xvdC1idG4gdHlwZT0iaW5mbyIgQGNsaWNrPSJhdXRvUGxheSI+7J6Q64+ZIOynhO2WiTwvc2xvdC1idG4+DQogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4NCiAgICAgICAgICAgIDwvdGVtcGxhdGU+DQogICAgICAgIDwvcD4NCiAgICA8L2Rpdj4NCg=="},{"version":3,"sources":["D:\\vue3\\src\\views\\part4\\game.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC/C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBAChC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACnE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;wBAC/D,CAAC,CAAC,CAAC,CAAC,CAAC;oBACT,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/D,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC;YACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/vue3/src/views/part4/game.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div id=\"game\">\r\n        <div class=\"board\">\r\n            <div class=\"wrap-center\">\r\n                <transition-group name=\"cards\" class=\"wrap\" tag=\"ul\">\r\n                    <li class=\"card\" v-for=\"(item, i) in cards\" :key=\"'card' + item.key\" @click=\"openCard(i)\">\r\n                        <div :class=\"['item front', {open: item.isOpened}]\">\r\n                            <i class=\"fas fa-question\" />\r\n                        </div>\r\n                        <div :class=\"['item back', {open: item.isOpened}, {pair: item.isPair}]\">\r\n                            <img :src=\"require(`@/assets/imgs/${item.img}-logo.png`)\" />\r\n                        </div>\r\n                    </li>\r\n                </transition-group>\r\n            </div>\r\n\r\n            <div class=\"score\">\r\n                도전 횟수: {{score}}\r\n            </div>\r\n\r\n            <div class=\"complete\" v-if=\"scoreBoard\">\r\n                <div class=\"complete-board\">\r\n                    <p>총 도전 횟수: {{score}}</p>\r\n                    <p>플레이 시간: {{completeTime}}</p>\r\n                    <p class=\"my-0\">\r\n                        <slot-btn type=\"secondary\" @click=\"close\">닫기</slot-btn>&nbsp;\r\n                        <slot-btn type=\"success\" @click=\"restart\">다시 시작하기</slot-btn>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <p>\r\n            <template v-if=\"isAuto\">\r\n                <slot-btn type=\"warning\" @click=\"autoStop\">자동 진행 중단</slot-btn>\r\n            </template>\r\n            <template v-else>\r\n                <slot-btn type=\"primary\" @click=\"start\" v-if=\"!isStart\">시작하기</slot-btn>\r\n                <template v-else>\r\n                    <slot-btn type=\"danger\" @click=\"cancel\">취소하기</slot-btn>&nbsp;\r\n                    <slot-btn type=\"info\" @click=\"autoPlay\">자동 진행</slot-btn>\r\n                </template>\r\n            </template>\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, inject } from 'vue'\r\nimport slotBtn from '@/components/slotBtn'\r\n\r\nconst _ = require('lodash')\r\nconst util = inject('util')\r\n\r\nconst logos = ['vue', 'react', 'angular', 'nodejs', 'webpack', 'js']\r\n\r\nlet isStart = ref(false)\r\nlet isComplete = ref(false)\r\nlet cards = ref([])\r\nlet openedCount = ref(0)\r\nlet openedIndex = ref([])\r\nlet score = ref(0)\r\nlet scoreBoard = ref(false)\r\nlet completeTime = ref('')\r\n\r\nlet isAuto = ref(false)\r\nlet pairCount = 0, startTime = 0, endTime = 0\r\nlet openComplete = []\r\n\r\nconst setCards = () => {\r\n    cards.value = []\r\n\r\n    for (let i = 0; i < 12; i++) {\r\n        cards.value.push({img: logos[i % 6], isOpened: true, isPair: false, key: i})\r\n    }\r\n}\r\n\r\nconst start = async () => {\r\n    close()\r\n\r\n    for (let i = 0; i < cards.value.length; i++) {\r\n        cards.value[i].isOpened = false\r\n        cards.value[i].isPair = false\r\n\r\n        await util.delay(100)\r\n    }\r\n\r\n    await util.delay(600)\r\n\r\n    await shuffle()\r\n\r\n    startTime = new Date().getTime()\r\n    isStart.value = true\r\n}\r\n\r\nconst cancel = async () => {\r\n    close()\r\n\r\n    for (let i = 0; i < cards.value.length; i++) {\r\n        cards.value[i].isOpened = true\r\n        cards.value[i].isPair = false\r\n\r\n        await util.delay(100)\r\n    }\r\n}\r\n\r\nconst restart = () => {\r\n    close()\r\n    start()\r\n}\r\n\r\nconst close = () => {\r\n    pairCount = 0\r\n    openComplete = []\r\n    score.value = 0\r\n    openedCount.value = 0\r\n    openedIndex.value = []\r\n    scoreBoard.value = false\r\n    isStart.value = false\r\n    isComplete.value = false\r\n}\r\n\r\nconst openCard = async (index) => {\r\n    if (openedCount.value < 2 && !cards.value[index].isOpened && isStart.value) {\r\n        openedCount.value++\r\n        cards.value[index].isOpened = true\r\n        openedIndex.value.push(index)\r\n\r\n        await checkPair()\r\n    }\r\n}\r\n\r\nconst checkPair = async () => {\r\n    if (openedCount.value >= 2) {\r\n        score.value++\r\n\r\n        let index1 = openedIndex.value[0], index2 = openedIndex.value[1]\r\n\r\n        if (cards.value[index1].img == cards.value[index2].img) {\r\n            await util.delay(500)\r\n\r\n            cards.value[index1].isPair = true\r\n            cards.value[index2].isPair = true\r\n\r\n            pairCount++\r\n\r\n            openComplete.push(index1)\r\n            openComplete.push(index2)\r\n        } else {\r\n            await util.delay(1000)\r\n\r\n            cards.value[index1].isOpened = false\r\n            await util.delay(100)\r\n            cards.value[index2].isOpened = false\r\n        }\r\n\r\n        openedIndex.value = []\r\n        openedCount.value = 0\r\n    }\r\n\r\n    if (pairCount >= 6) {\r\n        endTime = new Date().getTime()\r\n        let completeDate = new Date(endTime - startTime)\r\n\r\n        completeTime.value = `${completeDate.getMinutes()}:${completeDate.getSeconds()}`\r\n        scoreBoard.value = true\r\n        isAuto.value = false\r\n    }\r\n}\r\n\r\nconst shuffle = async () => {\r\n    for (let i = 0; i < 24; i++) {\r\n        let index = i % 12\r\n        let num = cards.value[index]\r\n        let changeIndex = -1\r\n\r\n        do {\r\n            changeIndex = _.random(0, cards.value.length - 1)\r\n        } while (changeIndex == index)\r\n\r\n        let changeNum = cards.value[changeIndex]\r\n\r\n        cards.value[index] = changeNum\r\n        cards.value[changeIndex] = num\r\n\r\n        await util.delay(250)\r\n    }\r\n}\r\n\r\nconst autoPlay = async () => {\r\n    isAuto.value = true\r\n    let openIndex = []\r\n\r\n    while (pairCount < 6 && isAuto.value) {\r\n        let index = _.random(0, cards.value.length - 1)\r\n\r\n        if (openIndex.indexOf(index) == -1 && openComplete.indexOf(index) == -1) {\r\n            if (openIndex.length >= 2) {\r\n                openIndex = []\r\n            }\r\n\r\n            openIndex.push(index)\r\n            await openCard(index)\r\n        }\r\n    }\r\n}\r\n\r\nconst autoStop = () => {\r\n    isAuto.value = false\r\n}\r\n\r\nsetCards()\r\n</script>\r\n\r\n<style scoped>\r\n#game {text-align: center;}\r\n#game .board {\r\n    display: inline-block; width: 80vw; background-color: #000; padding: 25px 25px 0 25px; margin-bottom: 10px;\r\n    background-image: url('../../assets/imgs/bg.jpg'); background-repeat: no-repeat; background-size: cover;\r\n    background-position: center; text-align: center; position: relative;\r\n}\r\n#game .board .score {position: absolute; left: 20px; top: 10px; color: #fff; font-size: 30px; font-weight: 700}\r\n#game .complete {\r\n    position: absolute; width: 100%; height: 100%; left: 0; top: 0; background-color: rgba(0, 0, 0, .5);\r\n    display: flex; flex-direction: row; align-items: center; justify-content: center;\r\n}\r\n#game .complete-board {width: 300px; background-color: #fff; border-radius: 20px; padding: 20px; font-size: 20px;}\r\n#game .board .wrap-center {display: inline-block}\r\n.wrap {\r\n    width: 820px; height: 820px;\r\n    display: flex; flex-wrap: wrap; flex-direction: row;\r\n    justify-content: space-between;\r\n    padding: 0; margin: 0; list-style: none;\r\n}\r\n.card {\r\n    position: relative; width: 180px; height: 240px; perspective: 600px;\r\n    border-radius: 10px; border: 0; background-color: transparent;\r\n}\r\n.card .item {border-radius: 10px; transition: all .5s; backface-visibility: hidden;}\r\n.card .front {\r\n    position: absolute; width: 100%; height: 100%; left: 0; top: 0; background-color: gold;\r\n    color: #fff; font-size: 80px; display: flex; flex-direction: row; align-items: center; justify-content: center;\r\n    box-sizing: border-box; transform: rotateY(0deg); box-shadow: 1px 2px 4px #000;\r\n}\r\n.card .front.open {transform: rotateY(180deg)}\r\n.card .back {\r\n    width: 100%; height: 100%; background-color: #fff; transform: rotateY(-180deg); overflow: hidden;\r\n    display: flex; flex-direction: row; align-items: center; justify-content: center; box-sizing: border-box; box-shadow: 1px 2px 4px #000;\r\n}\r\n.card .back img {width: 70%; height: auto;}\r\n.card .back.open {transform: rotateY(0deg)}\r\n.card .back.pair {background-color: gold}\r\n.cards-move {transition: transform .2s ease}\r\n</style>"]}]}
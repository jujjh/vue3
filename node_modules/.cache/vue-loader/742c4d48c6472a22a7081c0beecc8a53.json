{"remainingRequest":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!F:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\plugin\\toastComponent.vue?vue&type=template&id=1f0407dc&scoped=true","dependencies":[{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\plugin\\toastComponent.vue","mtime":1639010242464},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1639010234912},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639010176117},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639010234900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBpZD0idG9hc3QiIHYtaWY9ImJnU2hvdyI+DQogICAgICAgIDx0cmFuc2l0aW9uLWdyb3VwIGFwcGVhciBuYW1lPSJ0b2FzdC12aWV3IiBAYWZ0ZXItbGVhdmU9ImNoZWNrVG9hc3QiPg0KICAgICAgICAgICAgPGRpdg0KICAgICAgICAgICAgICAgIDpjbGFzcz0iJ3RvYXN0LWJvZHkgJyArICh2LmNvbG9yICE9ICcnID8gJ2JnLScgKyB2LmNvbG9yIDogJycpIg0KICAgICAgICAgICAgICAgIHYtZm9yPSIodiwgaSkgaW4gbGlzdCIgOmtleT0iJ3RvYXN0LScgKyB2LmtleSINCiAgICAgICAgICAgICAgICBAY2xpY2s9ImhpZGUoaSkiPg0KICAgICAgICAgICAgICAgIDxpIHYtaWY9InYuaWNvbiAhPSAnJyIgOmNsYXNzPSInZmFzIGZhLScgKyB2Lmljb24iIC8+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1lc3NhZ2UiPnt7di5tZXNzYWdlfX08L3NwYW4+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC90cmFuc2l0aW9uLWdyb3VwPg0KICAgIDwvZGl2Pg0K"},{"version":3,"sources":["F:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\plugin\\toastComponent.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;gBACC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACpD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"F:/00_김주희/00_개인스터디/vue3/src/components/plugin/toastComponent.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div id=\"toast\" v-if=\"bgShow\">\r\n        <transition-group appear name=\"toast-view\" @after-leave=\"checkToast\">\r\n            <div\r\n                :class=\"'toast-body ' + (v.color != '' ? 'bg-' + v.color : '')\"\r\n                v-for=\"(v, i) in list\" :key=\"'toast-' + v.key\"\r\n                @click=\"hide(i)\">\r\n                <i v-if=\"v.icon != ''\" :class=\"'fas fa-' + v.icon\" />\r\n                <span class=\"message\">{{v.message}}</span>\r\n            </div>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps, defineExpose } from 'vue'\r\n\r\nconst props = defineProps({\r\n    message: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    icon: {\r\n        type: String,\r\n        default: 'check-circle',\r\n    },\r\n    delay: {\r\n        type: [Number, String],\r\n        defalt: 3000,\r\n    },\r\n    color: {\r\n        type: String,\r\n        default: 'success'\r\n    },\r\n})\r\n\r\nlet bgShow = ref(false)\r\nlet list = ref([])\r\nlet timeout = ref([])\r\nlet messageLimit = 4\r\nlet key = 0\r\n\r\nconst show = () => {\r\n    bgShow.value = true\r\n\r\n    list.value.push({\r\n        key: key,\r\n        color: props.color,\r\n        message: props.message,\r\n        icon: props.icon\r\n    })\r\n\r\n    // 표시 시간이 지나면 자동으로 메시지 삭제 \r\n    timeout.value.push(setTimeout(() => {\r\n        hide(0)\r\n    }, props.delay))\r\n\r\n    key++\r\n\r\n    let len = list.value.length\r\n\r\n    if (len > messageLimit) {\r\n        hide(0)\r\n    }\r\n}\r\n\r\nconst hide = (index = 0) => {\r\n    try {\r\n        clearTimeout(timeout.value[list.value[index].key])\r\n\r\n        if (list.value.length > 0) {\r\n            list.value.splice(index, 1)\r\n        }\r\n    } catch {}\r\n}\r\n\r\nconst checkToast = () => {\r\n    if (list.value.length <= 0) {\r\n        key = 0\r\n        timeout.value = []\r\n        bgShow.value = false\r\n    }\r\n}\r\n\r\ndefineExpose({\r\n    show, hide\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n#toast {\r\n    position: fixed; bottom: 0; z-index: 100000; width: 100%; background-color: transparent;\r\n    display: inline-flex; flex-direction: column; align-items: center;\r\n}\r\n.toast-body {\r\n    margin: 5px 0; height: 55px; padding: 0 25px 0 15px; min-width: 400px; border-radius: 5px; box-sizing: border-box;\r\n    display: flex; flex-direction: row; align-items: center; justify-content: left;\r\n}\r\n.toast-body.bg-success {border-left: 6px solid #3a863c;}\r\n.toast-body.bg-primary {border-left: 6px solid #0b3e79;}\r\n.toast-body.bg-info {border-left: 6px solid #1a74be;}\r\n.toast-body.bg-warning {border-left: 6px solid #cc7000;}\r\n.toast-body.bg-error {border-left: 6px solid #b33a3a;}\r\n.toast-body i {display: block; margin-right: 10px; font-size: 24px;}\r\n.toast-body .message {font-size: 14px;}\r\n\r\n.success {color: #4caf50 !important;}\r\n.primary {color: #1867c0 !important;}\r\n.info {color: #2196f3 !important;}\r\n.warning {color: #fb8c00 !important;}\r\n.error {color: #ff5252 !important;}\r\n\r\n.bg-success {background-color: #4caf50 !important; color: #fff;}\r\n.bg-primary {background-color: #1867c0 !important; color: #fff;}\r\n.bg-info {background-color: #2196f3 !important; color: #fff;}\r\n.bg-warning {background-color: #fb8c00 !important; color: #fff;}\r\n.bg-error {background-color: #ff5252 !important; color: #fff;}\r\n\r\n.toast-view-enter-from {margin-bottom: -60px; opacity: 0;}\r\n.toast-view-leave-to {transform: scale(0); opacity: 0;}\r\n.toast-view-leave-active, .toast-view-enter-active {transition: all .2s ease-out;}\r\n</style>"]}]}
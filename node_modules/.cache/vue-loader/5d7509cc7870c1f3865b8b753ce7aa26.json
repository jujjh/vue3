{"remainingRequest":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!F:\\00_김주희\\00_개인스터디\\vue3\\src\\views\\ex\\board\\list.vue?vue&type=style&index=0&id=b3a7b04e&scoped=true&lang=css","dependencies":[{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\src\\views\\ex\\board\\list.vue","mtime":1642127467805},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639010181170},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1639010234911},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\postcss-loader\\src\\index.js","mtime":1639010216011},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639010176117},{"path":"F:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639010234900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYm9hcmRXcmFwIHt3aWR0aDo4MCU7fQ0KLmJvYXJkVG9wIHtkaXNwbGF5OmZsZXg7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgbWFyZ2luLWJvdHRvbToyMHB4O30NCi5wYWdpbmF0aW9uIHt0ZXh0LWFsaWduOmNlbnRlcn0NCg=="},{"version":3,"sources":["F:\\00_김주희\\00_개인스터디\\vue3\\src\\views\\ex\\board\\list.vue"],"names":[],"mappings":";AAmLA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"F:/00_김주희/00_개인스터디/vue3/src/views/ex/board/list.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <h1>게시판</h1>\r\n  <div class=\"boardWrap\">\r\n    <div class=\"boardTop\">\r\n\r\n      <p>total {{cache.length}} post </p>\r\n      <select v-model=\"listCunt\">\r\n        <option value=\"5\" selected> 5개씩 보기</option>\r\n        <option value=\"10\"> 10개씩 보기</option>\r\n        <option value=\"20\"> 20개씩 보기</option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n      <table class=\"table\">\r\n        <colgroup>\r\n          <col width=\"70\">\r\n          <col width=\"\">\r\n          <col width=\"120\">\r\n          <col width=\"120\">\r\n        </colgroup>\r\n        <thead>\r\n          <tr>\r\n            <th>번호</th>\r\n            <th>제목</th>\r\n            <th>작성자</th>\r\n            <th>등록일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <template v-if=\"list.length > 0\">\r\n          <tr v-for=\"(item, idx) in list\" :key=\"`list-${idx}`\">\r\n            <td>{{item.idx}}</td>\r\n            <td>{{item.title}}</td>\r\n            <td>{{item.userName}}</td>\r\n            <td>{{item.regDate.substr(0,10)}}</td>\r\n          </tr>\r\n          </template>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ul class=\"pagination\">\r\n      <li class=\"page-item\" :class=\"{'disabled' : isBtnFirst}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('first')\">First</a></li>\r\n      <li class=\"page-item\" :class=\"{'disabled' : isBtnPrev}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('prev')\">Previous</a></li>\r\n      <template v-for=\"(item, index) in pageList\" :key=\"`list-${index}`\">\r\n        <li class=\"page-item\" :class=\"{'active' : item == currentPage}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"page(item)\">{{item+1}}</a></li>\r\n      </template>\r\n      <li class=\"page-item\" :class=\"{'disabled' : isBtnNext}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('next')\">Next</a></li>\r\n      <li class=\"page-item\" :class=\"{'disabled' : isBtnLast}\"><a class=\"page-link\" href=\"#\" @click.prevent=\"pageArrow('last')\">Last</a></li>\r\n    </ul>\r\n    <div>\r\n      <a href=\"#\" @click.prevent=\"write\" class=\"btn btn-sm btn-primary\">작성</a>\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport router from '@/router'\r\nimport axios from 'axios'\r\nimport {ref, watch} from 'vue'\r\n\r\nconst list = ref([]) //보여지는 리스트\r\nconst cache = ref([]) //리스트 전체\r\n\r\nconst listCunt = ref('5') // 한 페이지에 노출될 게시글 개수\r\n\r\nlet currentPage = ref(0) //현재 페이지\r\nlet pageNum = 10 //페이징 갯수\r\nconst pageList = ref([]) // 보여지는 페이지 리스트\r\nlet totalPage = ref(0); //페이지 숫자\r\n\r\nlet isBtnFirst = ref(true); \r\nlet isBtnPrev = ref(true); \r\nlet isBtnNext = ref(true); \r\nlet isBtnLast = ref(true); \r\n\r\nconst currentPageListStart = () =>{\r\n  return Math.floor(currentPage.value / pageNum) * pageNum\r\n}\r\n// 페이징 \r\nconst paging =() => {\r\n  //보여지는 페이지 리셋\r\n  pageList.value = [];\r\n\r\n  //몇페이지 까지 있는지 확인\r\n  if(cache.value.length % listCunt.value == 0 ){\r\n    totalPage.value = (cache.value.length / listCunt.value) -1\r\n  } else{\r\n    totalPage.value =  Math.ceil(cache.value.length / listCunt.value) -1\r\n  }\r\n\r\n  //현재페이지 기준으로 페이징 숫자 넣기\r\n  let pageListStart = currentPageListStart()\r\n  for(let i= 0; i< pageNum; i++){   \r\n    if(totalPage.value >= pageListStart){\r\n      pageList.value.push(pageListStart)\r\n      pageListStart ++;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst getList = () =>{\r\n  \r\n  axios.post('https://studyapi.programrush.co.kr/study/getBoardList')\r\n  .then(res => {\r\n    \r\n    const json = res.data\r\n    if(json.result == \"success\"){\r\n      cache.value = json.data\r\n    }\r\n    list.value = [] //보여지는 게시물 리셋\r\n    \r\n    let listIdx = (listCunt.value * (currentPage.value )); // 보여질 게시물 index\r\n    for(let i= 0; i < listCunt.value; i++ ){       //게시글 수 만큼 루프\r\n      if(cache.value.length > listIdx) { //\r\n        list.value.push(cache.value[listIdx])\r\n        listIdx ++;\r\n      }\r\n    }\r\n\r\n    paging()\r\n    pageBtnCheck()\r\n\r\n  })  \r\n}\r\n\r\ngetList()\r\n\r\n//페이지 번호 클릭시\r\nconst page = (e) =>{\r\n  currentPage.value = e  \r\n  getList()\r\n}\r\n\r\n//리스트 갯수 수정시\r\nwatch(listCunt,(after, before)  =>{\r\n  currentPage.value = 0\r\n  getList()\r\n})\r\n\r\nconst pageBtnCheck = () =>{\r\n  isBtnFirst.value = currentPage.value == 0 ? true : false\r\n  isBtnPrev.value = currentPage.value == 0 ? true : false\r\n  \r\n  isBtnNext.value = currentPage.value == totalPage.value ? true : false\r\n  isBtnLast.value = currentPage.value == totalPage.value ? true : false\r\n}\r\n\r\nwatch(currentPage,(after, before)  =>{\r\n  pageBtnCheck()\r\n})\r\n\r\n\r\n//페이지 처음/끝/이전/다음 버튼 클릭시\r\nconst pageArrow = (e) => {\r\n  let movePage = parseInt(currentPage.value)\r\n  if(e == 'first'){ //처음으로\r\n    movePage = 0\r\n  } else if(e == 'last'){    //마지막\r\n    movePage = totalPage.value\r\n  } else if(e == 'prev'){    //이전  \r\n    movePage = currentPageListStart() - 1    \r\n    movePage < 0 ? movePage = 0 : ''\r\n  } else{//다음\r\n    movePage = currentPageListStart() + 10\r\n    movePage >= totalPage.value ? movePage = totalPage.value : ''\r\n  }\r\n  page(movePage)\r\n}\r\n\r\n\r\nconst write = () => {\r\n  router.push('/ex/board/write')\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.boardWrap {width:80%;}\r\n.boardTop {display:flex; justify-content: space-between; align-items: center; margin-bottom:20px;}\r\n.pagination {text-align:center}\r\n</style>\r\n"]}]}
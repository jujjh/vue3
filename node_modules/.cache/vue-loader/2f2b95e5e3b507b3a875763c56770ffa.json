{"remainingRequest":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\validateForm.vue?vue&type=template&id=6903620a","dependencies":[{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\validateForm.vue","mtime":1639010242466},{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1639010234912},{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639010176117},{"path":"D:\\00_김주희\\00_개인스터디\\vue3\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639010234900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGZvcm0gcmVmPSJmcm0iIEBzdWJtaXQucHJldmVudD4NCiAgICAgICAgPHNsb3Q+PC9zbG90Pg0KICAgIDwvZm9ybT4NCg=="},{"version":3,"sources":["D:\\00_김주희\\00_개인스터디\\vue3\\src\\components\\validateForm.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/00_김주희/00_개인스터디/vue3/src/components/validateForm.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <form ref=\"frm\" @submit.prevent>\r\n        <slot></slot>\r\n    </form>\r\n</template>\r\n\r\n<script setup>\r\nimport { useSlots, defineExpose, getCurrentInstance } from 'vue'\r\n\r\nconst ins = getCurrentInstance()\r\nconst slots = useSlots()\r\n\r\nlet checkState = true\r\nlet firstElm = null\r\n\r\nconst validate = () => {\r\n    // const slot = slots.default()\r\n\r\n    // console.log(slot[0].children[0].type)\r\n    // console.log(ins)\r\n\r\n    checkState = true\r\n    firstElm = null\r\n\r\n    traverse(ins.subTree)\r\n\r\n    // 검수에 통과하지 못한 가장 첫번째 폼에 포커스\r\n    if (firstElm !== null) {\r\n        try {\r\n            firstElm.scrollIntoView({behavior: 'smooth', block: 'center'})\r\n        } catch(e) {}\r\n    }\r\n\r\n    return checkState\r\n}\r\n\r\nconst resetForm = () => {\r\n    traverse(ins.subTree, 'reset')\r\n}\r\n\r\nconst traverse = (el, flag = 'dom') => {\r\n    if (Array.isArray(el.children)) {\r\n        const len = el.children.length\r\n\r\n        if (len > 0) {\r\n            const vueNodes = el.children\r\n\r\n            // vue node 전체(chilren)을 탐색 하여 chidren이 또 있는 경우 재귀한다.\r\n            for (let i = 0; i < len; i++) {\r\n                if (vueNodes[i].component !== null) {\r\n                    traverse(vueNodes[i].component.subTree, flag)\r\n                }\r\n\r\n                if (!!vueNodes[i].children) {\r\n                    if (vueNodes[i].children.length > 0) {\r\n                        traverse(vueNodes[i], flag)\r\n                    }\r\n                } else {\r\n                    componentCheck(vueNodes[i], flag)\r\n                }\r\n            }\r\n        }\r\n    } else if (!!el.component) {\r\n        if (el.component.subTree !== undefined) {\r\n            traverse(el.component.subTree, flag)\r\n        }\r\n    }\r\n}\r\n\r\nconst componentCheck = async (el, flag) => {\r\n    const vueDom = [\r\n        'inputField', 'numberFormat', 'selectBox', 'switchButton', 'checkButton',\r\n        'orgSelect', 'datePicker', 'findPostCode', 'attachFile', 'slotsTable'\r\n    ]\r\n\r\n    // 컴포넌트인지 체크 후 필요한 처리를 한다.\r\n    if (typeof el.type == 'object') {\r\n        let file = el.type.__file.split('/')\r\n        let tagName = file[file.length - 1].split('.')[0]\r\n\r\n        if (vueDom.indexOf(tagName) > -1) {\r\n            if (flag == 'reset') {\r\n                el.component.exposed.resetForm()\r\n            } else {\r\n                if (!el.component.exposed.check() && checkState) {\r\n                    checkState = false\r\n\r\n                    // 가장 처음 검수에 통과 하지 못한 폼 저장 (라인 포커스)\r\n                    if (firstElm === null) {\r\n                        firstElm = el.$el\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ndefineExpose({\r\n    resetForm,\r\n    validate\r\n})\r\n</script>"]}]}